jobs:
  build:
    runs-on: ${{ matrix.os }}  # Use matrix variable for runs-on
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # Include macOS
        goarch: [amd64, arm64] # or whatever architectures you need
        exclude: # common to exclude windows arm64
          - os: windows-latest
            goarch: arm64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Or your preferred version

      - name: Set up dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          # ... Linux dependency installation ...

      - name: Set up dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install <package1> <package2> ...

      - name: Set up dependencies and environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # ... Windows dependency installation (very OS specific) ...

      - name: Build Fyne app
        env:
          CGO_ENABLED: 1 # Important for CGO
        run: |
          go build -ldflags="-H=${{ matrix.os }}-${{ matrix.goarch }}" -o ${{ matrix.os }}-${{ matrix.goarch }}-${{ github.sha }} ./...

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}-${{ matrix.goarch }}
          path: ${{ matrix.os }}-${{ matrix.goarch }}-${{ github.sha }}
