name: Build and Release Fyne App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            ext: ""
          - os: macos-latest
            platform: darwin
            ext: ""
          - os: windows-latest
            platform: windows
            ext: ".exe"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies for Linux
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev libegl1-mesa-dev libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev

    - name: Install Fyne dependencies
      run: |
        go install fyne.io/fyne/v2/cmd/fyne@latest

    - name: Build for ${{ matrix.platform }}
      run: |
        go mod download
        fyne package -os ${{ matrix.platform }}

    - name: Rename binary
      run: |
        mv *${{ matrix.ext }} myapp-${{ matrix.platform }}${{ matrix.ext }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-${{ matrix.platform }}
        path: myapp-${{ matrix.platform }}${{ matrix.ext }}
        retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          myapp-linux/myapp-linux
          myapp-darwin/myapp-darwin
          myapp-windows/myapp-windows.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
